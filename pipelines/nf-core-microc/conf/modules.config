/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    //withName: '.*CAT_FASTQ.*' {
    withName: 'CAT_FASTQ' {    
        publishDir = [
            [
                path: { "${params.outdir}/cut_fastq/" },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
            ]
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BWA_MEM' {
            ext.args  = '-5SP -T0'
            ext.args2  = '-O BAM'
            ext.prefix = { "${meta.id}.Lb" }
            publishDir = [
                path: { "${params.outdir}/bwamem" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName: 'BWA_ALN' {
            ext.args  = '-n 2 -o 1 -q 0'
            ext.prefix = { "${meta.id}.aln" }
            publishDir = [
                path: { "${params.outdir}/bwaln" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName: 'BWA_SAMSE' {
            ext.args  = '-n 99'
            ext.prefix = { "${meta.id}.Lb" }
            publishDir = [
                path: { "${params.outdir}/bwamem" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }



    withName: 'NFCORE_MICROC:MICROC:FASTQ_ALIGN_BWA:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:SAMTOOLS_FLAGSTAT' {
        publishDir = [
            [
                path: { "${params.outdir}/bwamem/" },
                mode: params.publish_dir_mode,
            ]
        ]  
    }

    withName: 'PAIRTOOLS_PARSE' {
        ext.args = '--min-mapq 40 --walks-policy 5unique --max-inter-align-gap 30 --nproc-in 9 --nproc-out 9'
        publishDir = [
                path: { "${params.outdir}/pairtools/parse" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PAIRTOOLS_DEDUP' {
        ext.prefix = { "${meta.id}.Dd" }
        ext.args= '--mark-dups'
        publishDir = [
                path: { "${params.outdir}/pairtools/dedup" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PRESEQ_LCEXTRAP' {
        ext.prefix = { "${meta.id}.psq" }
        ext.args= '-bam -extrap 2.1e9 -step 1e8 -seg_len 1000000000'
        publishDir = [
                path: { "${params.outdir}/preseq_lcextrap" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PAIRTOOLS_QC' {
        ext.prefix = { "${meta.id}.ptqc" }
        publishDir = [
                path: { "${params.outdir}/pairtools/qc" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.pspl" }
        publishDir = [
                path: { "${params.outdir}/samtools" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'COOLER_CLOAD' {
        ext.args = 'pairix'
        publishDir = [
                path: { "${params.outdir}/cooler/${params.cool_bins}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'JUICER_PRE' {
        
        publishDir = [
                path: { "${params.outdir}/juicer" },
                mode: params.publish_dir_mode,
                pattern: '*.hic',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    


}
